{"ast":null,"code":"var _jsxFileName = \"/home/taifdev/Desktop/reactProj/crwn-clothing/redux/src/components/header/header.component.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux'; // connect is a Higher order component that lets us modify our component to have access to things related to redux\n\nimport { auth } from '../../firebase/firebase.utils';\nimport CartIcon from '../cart-icon/cart-icon.component';\nimport CartDropdown from '../cart-dropdown/cart-dropdown.component';\nimport { ReactComponent as Logo } from \"@svgr/webpack?-svgo,+ref!../../assets/crown.svg\";\nimport './header.styles.scss';\n\nconst Header = ({\n  currentUser,\n  hidden\n}) => React.createElement(\"div\", {\n  className: \"header\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, React.createElement(Link, {\n  className: \"logo-container\",\n  to: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, React.createElement(Logo, {\n  className: \"logo\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n})), React.createElement(\"div\", {\n  className: \"options\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, React.createElement(Link, {\n  className: \"option\",\n  to: \"/shop\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, \"SHOP\"), React.createElement(Link, {\n  className: \"option\",\n  to: \"/shop\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, \"CONTACT\"), currentUser ? React.createElement(\"div\", {\n  className: \"option\",\n  onClick: () => auth.signOut(),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, \"SIGN OUT\") : React.createElement(Link, {\n  className: \"option\",\n  to: \"/signin\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, \"SIGN IN\"), React.createElement(CartIcon, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n})), React.createElement(CartDropdown, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n})); // the function that allows us to access the states, with the state being our root-reducer\n// mapStateToProps is convention\n// const mapStateToProps = state => ({\n//     currentUser: state.user.currentUser\n// })\n// advanced way to destructure: syntax for nested values. Here, we want user,cart from the State:\n\n\nconst mapStateToProps = ({\n  user: {\n    currentUser\n  },\n  cart: {\n    hidden\n  }\n}) => ({\n  // currentUser: state.user.currentUser\n  currentUser,\n  hidden\n});\n\nexport default connect(mapStateToProps)(Header); // Higher Order Components are just functions that take components as arguments and then return you a new souped up component\n// this mapStateToProps and connect() , we will use anywhere where we need properties from our reducers","map":{"version":3,"sources":["/home/taifdev/Desktop/reactProj/crwn-clothing/redux/src/components/header/header.component.jsx"],"names":["React","Link","connect","auth","CartIcon","CartDropdown","Header","currentUser","hidden","signOut","mapStateToProps","user","cart"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAAuC;;AAGvC,SAASC,IAAT,QAAqB,+BAArB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;;AAGA,OAAO,sBAAP;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAD,KACb;AAAK,EAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD;AAAM,EAAA,SAAS,EAAC,gBAAhB;AAAiC,EAAA,EAAE,EAAC,GAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD;AAAM,EAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIE;AAAK,EAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD;AAAM,EAAA,SAAS,EAAC,QAAhB;AAAyB,EAAA,EAAE,EAAC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAIE,oBAAC,IAAD;AAAM,EAAA,SAAS,EAAC,QAAhB;AAAyB,EAAA,EAAE,EAAC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,EAOGD,WAAW,GACV;AAAK,EAAA,SAAS,EAAC,QAAf;AAAwB,EAAA,OAAO,EAAE,MAAMJ,IAAI,CAACM,OAAL,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADU,GAKV,oBAAC,IAAD;AAAM,EAAA,SAAS,EAAC,QAAhB;AAAyB,EAAA,EAAE,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAZJ,EAiBE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAjBF,CAJF,EAuBE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAvBF,CADF,C,CA6BA;AACA;AAEA;AACA;AACA;AAEA;;;AACA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAACJ,IAAAA;AAAD,GAAR;AAAuBK,EAAAA,IAAI,EAAE;AAACJ,IAAAA;AAAD;AAA7B,CAAD,MAA8C;AACpE;AACAD,EAAAA,WAFoE;AAGpEC,EAAAA;AAHoE,CAA9C,CAAxB;;AAMA,eAAeN,OAAO,CAACQ,eAAD,CAAP,CAAyBJ,MAAzB,CAAf,C,CAGA;AACA","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux'; // connect is a Higher order component that lets us modify our component to have access to things related to redux\n\n\nimport { auth } from '../../firebase/firebase.utils';\nimport CartIcon from '../cart-icon/cart-icon.component';\nimport CartDropdown from '../cart-dropdown/cart-dropdown.component';\nimport { ReactComponent as Logo } from '../../assets/crown.svg';\n\nimport './header.styles.scss';\n\nconst Header = ({ currentUser, hidden }) => (\n  <div className='header'>\n    <Link className='logo-container' to='/'>\n      <Logo className='logo' />\n    </Link>\n    <div className='options'>\n      <Link className='option' to='/shop'>\n        SHOP\n      </Link>\n      <Link className='option' to='/shop'>\n        CONTACT\n      </Link>\n      {currentUser ? (\n        <div className='option' onClick={() => auth.signOut()}>\n          SIGN OUT\n        </div>\n      ) : (\n        <Link className='option' to='/signin'>\n          SIGN IN\n        </Link>\n      )}\n\n      <CartIcon />\n    </div>\n    <CartDropdown />\n  </div>\n);\n\n\n// the function that allows us to access the states, with the state being our root-reducer\n// mapStateToProps is convention\n\n// const mapStateToProps = state => ({\n//     currentUser: state.user.currentUser\n// })\n\n// advanced way to destructure: syntax for nested values. Here, we want user,cart from the State:\nconst mapStateToProps = ({ user: {currentUser}, cart: {hidden} }) => ({\n  // currentUser: state.user.currentUser\n  currentUser,\n  hidden\n})\n\nexport default connect(mapStateToProps)(Header);\n\n\n// Higher Order Components are just functions that take components as arguments and then return you a new souped up component\n// this mapStateToProps and connect() , we will use anywhere where we need properties from our reducers"]},"metadata":{},"sourceType":"module"}