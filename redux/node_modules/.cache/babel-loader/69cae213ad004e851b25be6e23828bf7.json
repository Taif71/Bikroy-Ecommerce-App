{"ast":null,"code":"import _objectSpread from \"/home/taifdev/Desktop/reactProj/crwn-clothing/redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/taifdev/Desktop/reactProj/crwn-clothing/redux/src/App.js\";\nimport React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport Header from './components/header/header.component';\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\nimport { setCurrentUser } from './redux/user/user.actions';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  componentDidMount() {\n    const setCurrentUser = this.props.setCurrentUser;\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n        userRef.onSnapshot(snapShot => {\n          // this.setState({\n          //   currentUser: {\n          //     id: snapShot.id,\n          //     ...snapShot.data()\n          //   }\n          // });\n          // this.props.setCurrentUser({\n          setCurrentUser(_objectSpread({\n            id: snapShot.id\n          }, snapShot.data()));\n        });\n      } // this.setState({ currentUser: userAuth });\n\n\n      setCurrentUser(userAuth);\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/signin\",\n      component: SignInAndSignUpPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })));\n  }\n\n} // mapDispatch the prop\n\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user)) //dispatch is a way for redux to know that whatever objetc you're passing me is going to be an action object that I'm going to pass to every producer\n\n});\n\nexport default connect(null, mapDispatchToProps)(App); // we're gonna connect our App to the outcome of our initial connect call using the second argument of connect which is the mapDispatch the props\n// our app doesnt need any user anymore.Because it only sets state. So we pass in null as the first argument. Because we don't need an state to props","map":{"version":3,"sources":["/home/taifdev/Desktop/reactProj/crwn-clothing/redux/src/App.js"],"names":["React","Switch","Route","connect","HomePage","ShopPage","SignInAndSignUpPage","Header","auth","createUserProfileDocument","setCurrentUser","App","Component","unsubscribeFromAuth","componentDidMount","props","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","id","data","componentWillUnmount","render","mapDispatchToProps","dispatch","user"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,WAAP;AAEA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,mBAAP,MAAgC,2DAAhC;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,SAASC,IAAT,EAAeC,yBAAf,QAAgD,2BAAhD;AAEA,SAASC,cAAT,QAA+B,2BAA/B;;AAEA,MAAMC,GAAN,SAAkBX,KAAK,CAACY,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAWhCC,mBAXgC,GAWV,IAXU;AAAA;;AAahCC,EAAAA,iBAAiB,GAAG;AAAA,UAEXJ,cAFW,GAEO,KAAKK,KAFZ,CAEXL,cAFW;AAIlB,SAAKG,mBAAL,GAA2BL,IAAI,CAACQ,kBAAL,CAAwB,MAAMC,QAAN,IAAkB;AACnE,UAAIA,QAAJ,EAAc;AACZ,cAAMC,OAAO,GAAG,MAAMT,yBAAyB,CAACQ,QAAD,CAA/C;AAEAC,QAAAA,OAAO,CAACC,UAAR,CAAmBC,QAAQ,IAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AAEA;AACAV,UAAAA,cAAc;AACVW,YAAAA,EAAE,EAAED,QAAQ,CAACC;AADH,aAEPD,QAAQ,CAACE,IAAT,EAFO,EAAd;AAID,SAbD;AAcD,OAlBkE,CAoBnE;;;AACAZ,MAAAA,cAAc,CAACO,QAAD,CAAd;AACD,KAtB0B,CAA3B;AAuBD;;AAEDM,EAAAA,oBAAoB,GAAG;AACrB,SAAKV,mBAAL;AACD;;AAEDW,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEpB,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAEC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,SAAS,EAAEC,mBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CAHF,CADF;AAWD;;AA1D+B,C,CA6DlC;;;AACA,MAAMmB,kBAAkB,GAAGC,QAAQ,KAAK;AACtChB,EAAAA,cAAc,EAAEiB,IAAI,IAAID,QAAQ,CAAChB,cAAc,CAACiB,IAAD,CAAf,CADM,CAEtC;;AAFsC,CAAL,CAAnC;;AAOA,eAAexB,OAAO,CAAC,IAAD,EAAOsB,kBAAP,CAAP,CAAmCd,GAAnC,CAAf,C,CACA;AACA","sourcesContent":["import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport './App.css';\n\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport Header from './components/header/header.component';\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\n\nimport { setCurrentUser } from './redux/user/user.actions';\n\nclass App extends React.Component {\n\n  // we do not this constructor anymore\n  // constructor() {\n  //   super();\n\n  //   this.state = {\n  //     currentUser: null\n  //   };\n  // }\n\n  unsubscribeFromAuth = null;\n\n  componentDidMount() {\n\n    const {setCurrentUser} = this.props;\n\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n\n        userRef.onSnapshot(snapShot => {\n          // this.setState({\n          //   currentUser: {\n          //     id: snapShot.id,\n          //     ...snapShot.data()\n          //   }\n          // });\n         \n          // this.props.setCurrentUser({\n          setCurrentUser({\n              id: snapShot.id,\n              ...snapShot.data()\n          })\n        });\n      }\n\n      // this.setState({ currentUser: userAuth });\n      setCurrentUser(userAuth);\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return (\n      <div>\n        {/* <Header currentUser={this.state.currentUser} /> */}\n        <Header />\n        <Switch>\n          <Route exact path='/' component={HomePage} />\n          <Route path='/shop' component={ShopPage} />\n          <Route path='/signin' component={SignInAndSignUpPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\n// mapDispatch the prop\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n  //dispatch is a way for redux to know that whatever objetc you're passing me is going to be an action object that I'm going to pass to every producer\n})\n\n\n\nexport default connect(null, mapDispatchToProps )(App);\n// we're gonna connect our App to the outcome of our initial connect call using the second argument of connect which is the mapDispatch the props\n// our app doesnt need any user anymore.Because it only sets state. So we pass in null as the first argument. Because we don't need an state to props"]},"metadata":{},"sourceType":"module"}