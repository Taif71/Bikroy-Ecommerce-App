{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport rootReducersadasdads from './root-reducer'; // we have to add middleware to our store, so that whenever actions get fired or dispatched we can catch them and then display them.\n\nimport logger from 'redux-logger'; // what is a logger here?? => Ans: It is a middleware. all it does is it catches the action, it console logs it out for us, then it moves along.    \n// this is helpful to us for debugging our redux code\n//import rootReducer from './root-reducer';\n// this configuration can be viewed  on redux DOC as well\n\nconst middlewares = [logger]; // this will spread out all of the methods in this middlewares array into this function call as individual arguments\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares)); // ??? what is this line doing\n// const store = createStore(rootReducer, applyMiddleware(logger));\n\nexport default store; // we will pass it into our index.js Provider","map":{"version":3,"sources":["/home/taifdev/Desktop/reactProj/crwn-clothing/redux/src/redux/store.js"],"names":["createStore","applyMiddleware","rootReducersadasdads","logger","middlewares","store","rootReducer"],"mappings":"AAEA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,oBAAP,MAAiC,gBAAjC,C,CAEA;;AAEA,OAAOC,MAAP,MAAmB,cAAnB,C,CAAmC;AACnC;AAGA;AAEA;;AACA,MAAMC,WAAW,GAAG,CAACD,MAAD,CAApB,C,CAIA;;AACA,MAAME,KAAK,GAAGL,WAAW,CAACM,WAAD,EAAcL,eAAe,CAAC,GAAGG,WAAJ,CAA7B,CAAzB,C,CAAyE;AACzE;;AAEA,eAAeC,KAAf,C,CAAsB","sourcesContent":["\n\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducersadasdads from './root-reducer';\n\n// we have to add middleware to our store, so that whenever actions get fired or dispatched we can catch them and then display them.\n\nimport logger from 'redux-logger'; // what is a logger here?? => Ans: It is a middleware. all it does is it catches the action, it console logs it out for us, then it moves along.    \n// this is helpful to us for debugging our redux code\n\n\n//import rootReducer from './root-reducer';\n\n// this configuration can be viewed  on redux DOC as well\nconst middlewares = [logger];\n\n\n\n// this will spread out all of the methods in this middlewares array into this function call as individual arguments\nconst store = createStore(rootReducer, applyMiddleware(...middlewares)); // ??? what is this line doing\n// const store = createStore(rootReducer, applyMiddleware(logger));\n\nexport default store; // we will pass it into our index.js Provider\n"]},"metadata":{},"sourceType":"module"}